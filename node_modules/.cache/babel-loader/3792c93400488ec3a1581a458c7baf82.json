{"ast":null,"code":"const AbstractHandler = require('./AbstractHandler');\n\nconst Constants = require('../../../../util/Constants');\n\nclass TypingStartHandler extends AbstractHandler {\n  handle(packet) {\n    const client = this.packetManager.client;\n    const data = packet.d;\n    const channel = client.channels.get(data.channel_id);\n    const user = client.users.get(data.user_id);\n    const timestamp = new Date(data.timestamp * 1000);\n\n    if (channel && user) {\n      if (channel.type === 'voice') {\n        client.emit(Constants.Events.WARN, \"Discord sent a typing packet to voice channel \".concat(channel.id));\n        return;\n      }\n\n      if (channel._typing.has(user.id)) {\n        const typing = channel._typing.get(user.id);\n\n        typing.lastTimestamp = timestamp;\n        typing.resetTimeout(tooLate(channel, user));\n      } else {\n        channel._typing.set(user.id, new TypingData(client, timestamp, timestamp, tooLate(channel, user)));\n\n        client.emit(Constants.Events.TYPING_START, channel, user);\n      }\n    }\n  }\n\n}\n\nclass TypingData {\n  constructor(client, since, lastTimestamp, _timeout) {\n    this.client = client;\n    this.since = since;\n    this.lastTimestamp = lastTimestamp;\n    this._timeout = _timeout;\n  }\n\n  resetTimeout(_timeout) {\n    this.client.clearTimeout(this._timeout);\n    this._timeout = _timeout;\n  }\n\n  get elapsedTime() {\n    return Date.now() - this.since;\n  }\n\n}\n\nfunction tooLate(channel, user) {\n  return channel.client.setTimeout(() => {\n    channel.client.emit(Constants.Events.TYPING_STOP, channel, user, channel._typing.get(user.id));\n\n    channel._typing.delete(user.id);\n  }, 6000);\n}\n/**\n * Emitted whenever a user starts typing in a channel.\n * @event Client#typingStart\n * @param {Channel} channel The channel the user started typing in\n * @param {User} user The user that started typing\n */\n\n/**\n * Emitted whenever a user stops typing in a channel.\n * @event Client#typingStop\n * @param {Channel} channel The channel the user stopped typing in\n * @param {User} user The user that stopped typing\n */\n\n\nmodule.exports = TypingStartHandler;","map":null,"metadata":{},"sourceType":"script"}