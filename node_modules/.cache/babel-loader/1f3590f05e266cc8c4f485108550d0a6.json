{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chandler\\\\Desktop\\\\electron-discord\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst electron = window.require('electron');\n\nconst ipcRenderer = electron.ipcRenderer;\n\nconst Discord = require('discord.js');\n\nconst client = new Discord.Client();\n\nconst auth = require('./auth.json');\n\nclient.login(auth.token);\nclient.on('ready', () => {\n  console.log(\"\\n\\n\\nLogged in as \".concat(client.user.tag, \"!\"));\n  globalPage.setState({\n    guilds: client.guilds.array().map(x => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, x.name);\n    }),\n    channels: client.channels.array().map(x => {\n      if (x.type == 'text') {\n        return React.createElement(\"div\", {\n          onClick: () => clickChannel(x),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, x.name);\n      }\n    })\n  });\n});\nclient.on('message', msg => {\n  globalPage.setState({\n    messages: globalPage.state.messages.concat(createMessage(msg))\n  });\n});\nclient.on('channelCreate', channel => {\n  globalPage.setState({\n    channels: globalPage.state.channels.concat(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, channel.type))\n  });\n});\n\nfunction clickChannel(channel) {\n  console.log(channel.type != 'text');\n\n  if (channel.type != 'text') {\n    return;\n  }\n\n  var messages;\n  channel.fetchMessages().then(msgs => {\n    globalPage.setState({\n      messages: msgs.map(x => {\n        return createMessage(x);\n      })\n    });\n  });\n}\n\nfunction createMessage(msg) {\n  var nameColor = {\n    color: 'white',\n    color: msg.member.displayHexColor,\n    float: 'left'\n  };\n  return React.createElement(\"div\", {\n    class: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"messageAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: nameColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, msg.member.displayName), React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, msg.author.tag)), React.createElement(\"div\", {\n    class: \"messageText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, msg.cleanContent));\n}\n\nvar globalPage;\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guilds: [\"guilds\"],\n      channels: ['channels'],\n      messages: ['messages'],\n      members: ['members']\n    };\n    globalPage = this;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Guilds, {\n      guilds: this.state.guilds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Channels, {\n      channels: this.state.channels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Messages, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Members, {\n      members: this.state.members,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n  showMessages() {\n    console.log(this.state.messages);\n  }\n\n}\n\nclass Guilds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guilds: this.props.guilds\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      guilds: props.guilds\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"guilds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.guilds);\n  }\n\n}\n\nclass Channels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: this.props.channels\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      channels: props.channels\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.channels);\n  }\n\n}\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      messages: props.messages\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.messages);\n  }\n\n  showMessages() {\n    console.log(this.state.messages);\n  }\n\n}\n\nclass Members extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: this.props.members\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      members: props.members\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"members\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.members);\n  }\n\n}\n\nReactDOM.render(React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Chandler/Desktop/electron-discord/src/index.js"],"names":["React","ReactDOM","electron","window","require","ipcRenderer","Discord","client","Client","auth","login","token","on","console","log","user","tag","globalPage","setState","guilds","array","map","x","name","channels","type","clickChannel","msg","messages","state","concat","createMessage","channel","fetchMessages","then","msgs","nameColor","color","member","displayHexColor","float","displayName","author","cleanContent","Page","Component","constructor","props","members","render","showMessages","Guilds","componentWillReceiveProps","Channels","Messages","Members","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst electron = window.require('electron');\nconst ipcRenderer = electron.ipcRenderer;\n\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\nconst auth = require('./auth.json');\n\nclient.login(auth.token);\n\nclient.on('ready', () => {\n    console.log(`\\n\\n\\nLogged in as ${client.user.tag}!`);\n    \n   \tglobalPage.setState({\n   \t\tguilds:client.guilds.array().map(x=>{\n   \t\t\treturn <div>{x.name}</div>;\n   \t\t}),\n   \t\tchannels:client.channels.array().map(x=>{\n   \t\t\tif (x.type=='text'){\n\t   \t\t\treturn <div onClick={()=>clickChannel(x)}>{x.name}</div>\n\t   \t\t}\n   \t\t})\n   \t})\n});\n\nclient.on('message', msg => {\n\tglobalPage.setState({\n\t\tmessages:globalPage.state.messages.concat(createMessage(msg)),\n\t});\n});\nclient.on('channelCreate',channel=>{\n\tglobalPage.setState({\n\t\tchannels:globalPage.state.channels.concat(<div>{channel.type}</div>),\n\t})\n})\n\nfunction clickChannel(channel){\n\tconsole.log(channel.type!='text');\n\tif (channel.type!='text'){\n\t\treturn;\n\t}\n\n\tvar messages;\n\tchannel.fetchMessages().then(msgs=>{\n\t\tglobalPage.setState({\n\t\t\tmessages:msgs.map(x=>{return createMessage(x)})\n\t\t})\n\t});\n\n\n\t\n}\nfunction createMessage(msg){\n\tvar nameColor={\n\t\tcolor:'white',\n\t\tcolor:msg.member.displayHexColor,\n\t\tfloat:'left'\n\t}\n\treturn (<div class = \"message\">\n\t\t\t\t<div class=\"messageAuthor\">\n\t\t\t\t\t<div style={nameColor}>{msg.member.displayName}</div>\n\t\t\t\t\t<div style={{float:'right'}}>{msg.author.tag}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"messageText\">{msg.cleanContent}</div>\n\t\t\t</div>)\n}\nvar globalPage;\nclass Page extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tguilds:[\"guilds\"],\n\t\t\tchannels:['channels'],\n\t\t\tmessages:['messages'],\n\t\t\tmembers:['members']\n\t\t}\n\t\tglobalPage=this;\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Guilds guilds={this.state.guilds}/>\n\t\t\t\t<Channels channels={this.state.channels}/>\n\t\t\t\t<Messages messages={this.state.messages}/>\n\t\t\t\t<Members members={this.state.members}/>\n\t\t\t</div>\n\t\t)\n\t}\n\tshowMessages(){\n\t\tconsole.log(this.state.messages);\n\t}\n}\n\nclass Guilds extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tguilds:this.props.guilds,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tguilds:props.guilds,\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"guilds\">\n\t\t\t\t{this.state.guilds}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Channels extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tchannels:this.props.channels,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tchannels:props.channels,\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"channels\">\n\t\t\t\t{this.state.channels}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Messages extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tmessages:this.props.messages,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tmessages:props.messages\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"messages\">\n\t\t\t\t{this.state.messages}\n\t\t\t</div>\n\t\t)\n\t}\n\tshowMessages(){\n\t\tconsole.log(this.state.messages);\n\t}\n}\n\nclass Members extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tmembers:this.props.members,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tmembers:props.members\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"members\">\n\t\t\t\t{this.state.members}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nReactDOM.render(\n\t<Page />,\n\tdocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}