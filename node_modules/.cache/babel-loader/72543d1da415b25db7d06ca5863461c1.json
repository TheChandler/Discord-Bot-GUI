{"ast":null,"code":"const AbstractHandler = require('./AbstractHandler');\n\nconst Constants = require('../../../../util/Constants'); // Uncomment in v12\n// const Collection = require('../../../../util/Collection');\n\n\nclass GuildMembersChunkHandler extends AbstractHandler {\n  handle(packet) {\n    const client = this.packetManager.client;\n    const data = packet.d;\n    const guild = client.guilds.get(data.guild_id);\n    if (!guild) return; // Uncomment in v12\n    // const members = new Collection();\n    //\n    // for (const member of data.members) members.set(member.id, guild._addMember(member, false));\n\n    const members = data.members.map(member => guild._addMember(member, false));\n    client.emit(Constants.Events.GUILD_MEMBERS_CHUNK, members, guild);\n    client.ws.lastHeartbeatAck = true;\n  }\n\n}\n/**\n * Emitted whenever a chunk of guild members is received (all members come from the same guild).\n * @event Client#guildMembersChunk\n * @param {GuildMember[]} members The members in the chunk\n * @param {Guild} guild The guild related to the member chunk\n */\n\n\nmodule.exports = GuildMembersChunkHandler;","map":null,"metadata":{},"sourceType":"script"}