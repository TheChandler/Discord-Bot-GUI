{"ast":null,"code":"const Collection = require('../util/Collection');\n\nconst UserConnection = require('./UserConnection');\n/**\n * Represents a user's profile on Discord.\n */\n\n\nclass UserProfile {\n  constructor(user, data) {\n    /**\n     * The owner of the profile\n     * @type {User}\n     */\n    this.user = user;\n    /**\n     * The client that created the instance of the UserProfile\n     * @name UserProfile#client\n     * @type {Client}\n     * @readonly\n     */\n\n    Object.defineProperty(this, 'client', {\n      value: user.client\n    });\n    /**\n     * The guilds that the client user and the user share\n     * @type {Collection<Snowflake, Guild>}\n     */\n\n    this.mutualGuilds = new Collection();\n    /**\n     * The user's connections\n     * @type {Collection<Snowflake, UserConnection>}\n     */\n\n    this.connections = new Collection();\n    this.setup(data);\n  }\n\n  setup(data) {\n    /**\n     * If the user has Discord Premium\n     * @type {boolean}\n     */\n    this.premium = data.premium;\n    /**\n     * The date since which the user has had Discord Premium\n     * @type {?Date}\n     */\n\n    this.premiumSince = data.premium_since ? new Date(data.premium_since) : null;\n\n    for (const guild of data.mutual_guilds) {\n      if (this.client.guilds.has(guild.id)) {\n        this.mutualGuilds.set(guild.id, this.client.guilds.get(guild.id));\n      }\n    }\n\n    for (const connection of data.connected_accounts) {\n      this.connections.set(connection.id, new UserConnection(this.user, connection));\n    }\n  }\n\n}\n\nmodule.exports = UserProfile;","map":null,"metadata":{},"sourceType":"script"}