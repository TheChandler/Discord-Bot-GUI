{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chand\\\\Desktop\\\\Discord-Bot-GUI\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //const electron = window.require('electron');\n\nconst Discord = require('discord.js');\n\nconst client = new Discord.Client();\n\nconst auth = require('./auth.json');\n\nclient.login(auth.token);\nvar globalPage;\nclient.on('ready', () => {\n  console.log(\"\\n\\n\\nLogged in as \".concat(client.user.tag, \"!\"));\n  let textChannels = [];\n  client.channels.array().map(x => {\n    if (x.type === 'text') {\n      textChannels.push(React.createElement(\"div\", {\n        onClick: () => clickChannel(x.id),\n        className: \"channel\",\n        key: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, x.name));\n    }\n\n    return 0;\n  });\n  client.users.forEach((val, key) => {\n    if (val.dmChannel == null) {\n      val.createDM().then(dm => {//addChannel(dm,val.tag);\n      });\n    }\n  });\n  addChannel(client.users.get(225390295062282240).dmChannel, \"chandler\");\n  let messages = [];\n  globalPage.setState({\n    guilds: client.guilds.array().map(x => {\n      return React.createElement(\"img\", {\n        onClick: () => clickGuild(x),\n        className: \"guildIcon\",\n        src: x.iconURL,\n        alt: x.name,\n        key: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }),\n    channels: textChannels\n  });\n});\nclient.on('message', msg => {\n  globalPage.setState({\n    messages: globalPage.state.messages.concat(createMessage(msg))\n  });\n});\nclient.on('channelCreate', channel => {\n  addChannel(channel, channel.name);\n});\n\nfunction addChannel(channel, name) {\n  globalPage.setState({\n    channels: globalPage.state.channels.concat(React.createElement(\"div\", {\n      onClick: () => clickChannel(channel.id),\n      className: \"channel\",\n      key: channel.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, name))\n  });\n}\n\nfunction clickChannel(channelId) {\n  var channelDivs = [];\n\n  if (client.channels.get(channelId).type == 'dm') {\n    client.channels.forEach((channel, key) => {\n      if (channel.type === 'dm') {\n        if (key === channelId) {\n          channelDivs.push(React.createElement(\"div\", {\n            onClick: () => clickChannel(key),\n            className: \"selectedChannel\",\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, channel.recipient.tag));\n        } else {\n          channelDivs.push(React.createElement(\"div\", {\n            onClick: () => clickChannel(key),\n            className: \"channel\",\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, channel.recipient.tag));\n        }\n      }\n    });\n  } else {\n    client.channels.get(channelId).guild.channels.forEach((channel, key) => {\n      if (channel.type !== 'text') {} else if (key == channelId) {\n        channelDivs.push(React.createElement(\"div\", {\n          onClick: () => clickChannel(key),\n          className: \"selectedChannel\",\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, channel.name));\n      } else {\n        channelDivs.push(React.createElement(\"div\", {\n          onClick: () => clickChannel(key),\n          className: \"channel\",\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, channel.name));\n      }\n    });\n  } //channelDivs=[\"hey\"];\n\n\n  client.channels.get(channelId).fetchMessages().then(msgs => {\n    globalPage.setState({\n      messages: msgs.map(x => {\n        return createMessage(x);\n      }).reverse(),\n      channels: channelDivs\n    });\n  });\n}\n\nfunction clickGuild(guild) {\n  globalPage.setState({\n    channels: guild.channels.map(x => {\n      if (x.type === 'text') {\n        return React.createElement(\"div\", {\n          onClick: () => clickChannel(x.id),\n          className: \"channel\",\n          id: \"x.id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, x.name);\n      }\n    })\n  });\n}\n\nfunction createMessage(msg) {\n  let name;\n\n  if (msg.member != null) {\n    var nameColor = {\n      color: 'white',\n      color: msg.member.displayHexColor\n    };\n    name = msg.member.displayName;\n  } else {\n    name = msg.author.tag;\n  }\n\n  var messageText = msg.cleanContent;\n  let match = messageText.match(/\\*{2}[^\\*]+\\*{2}/);\n  var newMessageText;\n\n  while (match != null) {\n    newMessageText = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, newMessageText, messageText.slice(0, match.index), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, match[0].slice(2, -2)));\n    messageText = messageText.slice(match.index + match[0].length);\n    match = messageText.match(/\\*{2}[^\\*]+\\*{2}/);\n  }\n\n  newMessageText = React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, newMessageText, messageText);\n  msg.attachments.forEach(val => {\n    newMessageText = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: val.url,\n      alt: \"\",\n      className: \"embededImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), newMessageText);\n  });\n  return React.createElement(\"div\", {\n    className: \"message\",\n    key: msg.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: msg.author.avatarURL,\n    alt: \"\",\n    className: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"messageAuthor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    style: {\n      float: 'right'\n    },\n    type: \"checkbox\",\n    onClick: () => {\n      selectMessage(msg);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      float: 'right'\n    },\n    onClick: () => {\n      printMsg(msg);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, msg.author.tag), React.createElement(\"span\", {\n    style: nameColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"dateTime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \" \", msg.createdAt.toLocaleString())), React.createElement(\"div\", {\n    className: \"messageText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, newMessageText)));\n}\n\nlet selectedMessages = new Map();\n\nfunction selectMessage(msg) {\n  selectedMessages.set(msg.id, msg);\n}\n\nfunction clearMessages() {\n  selectedMessages = new Map();\n}\n\nfunction printMessages() {\n  selectedMessages.forEach(printMsg);\n}\n\nfunction printMsg(val) {\n  console.log(val);\n}\n\nfunction deleteMessages() {\n  selectedMessages.forEach(deleteMsg);\n\n  function deleteMsg(val, key) {\n    val.delete();\n  }\n\n  clearMessages();\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guilds: \"guilds\",\n      channels: 'channels',\n      messages: 'messages',\n      members: 'members'\n    };\n    globalPage = this;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Guilds, {\n      guilds: this.state.guilds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Channels, {\n      channels: this.state.channels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Messages, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Members, {\n      members: this.state.members,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n  showMessages() {\n    console.log(this.state.messages);\n  }\n\n}\n\nclass Guilds extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      guilds: this.props.guilds\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      guilds: props.guilds\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"guilds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.guilds);\n  }\n\n}\n\nclass Channels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: this.props.channels\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      channels: props.channels\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.channels);\n  }\n\n}\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      messages: props.messages\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"messageButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: () => deleteMessages(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      onClick: () => clearMessages(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Clear Selection\")), this.state.messages);\n  }\n\n  showMessages() {\n    console.log(this.state.messages);\n  }\n\n}\n\nclass Members extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: this.props.members\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      members: props.members\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"members\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.state.members);\n  }\n\n}\n\nReactDOM.render(React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/chand/Desktop/Discord-Bot-GUI/src/index.js"],"names":["React","ReactDOM","Discord","require","client","Client","auth","login","token","globalPage","on","console","log","user","tag","textChannels","channels","array","map","x","type","push","clickChannel","id","name","users","forEach","val","key","dmChannel","createDM","then","dm","addChannel","get","messages","setState","guilds","clickGuild","iconURL","msg","state","concat","createMessage","channel","channelId","channelDivs","recipient","guild","fetchMessages","msgs","reverse","member","nameColor","color","displayHexColor","displayName","author","messageText","cleanContent","match","newMessageText","slice","index","length","attachments","url","avatarURL","float","selectMessage","printMsg","createdAt","toLocaleString","selectedMessages","Map","set","clearMessages","printMessages","deleteMessages","deleteMsg","delete","Page","Component","constructor","props","members","render","showMessages","Guilds","componentWillReceiveProps","Channels","Messages","Members","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//const electron = window.require('electron');\n\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\nconst auth = require('./auth.json');\n\nclient.login(auth.token);\n\n\nvar globalPage;\nclient.on('ready', () => {\n    console.log(`\\n\\n\\nLogged in as ${client.user.tag}!`);\n\n\n    let textChannels=[];\n    client.channels.array().map(x=>{\n\t\tif (x.type==='text'){\n   \t\t\ttextChannels.push(<div onClick={()=>clickChannel(x.id)}  className=\"channel\" key={x.id}>{x.name}</div>);\n   \t\t}\n   \t\treturn 0;\n\t});\n\tclient.users.forEach((val,key)=>{\n\t\tif (val.dmChannel==null){\n\t\t\tval.createDM().then((dm)=>{\n\t\t\t\t//addChannel(dm,val.tag);\n\t\t\t});\n\t\t}\n\t})\n\taddChannel(client.users.get(225390295062282240).dmChannel,\"chandler\");\n\n    let messages=[];\n\n\n\n   \tglobalPage.setState({\n   \t\tguilds:client.guilds.array().map(x=>{\n   \t\t\treturn <img onClick={()=>clickGuild(x)} className=\"guildIcon\" src={x.iconURL} alt={x.name} key={x.id}/>\n   \t\t}),\n   \t\tchannels:textChannels,\n   \t});\n});\n\nclient.on('message', msg => {\n\tglobalPage.setState({\n\t\tmessages:globalPage.state.messages.concat(createMessage(msg)),\n\t});\n});\nclient.on('channelCreate',channel=>{\n\taddChannel(channel,channel.name);\n})\n\nfunction addChannel(channel,name){\n\tglobalPage.setState({\n\t\tchannels:globalPage.state.channels.concat(<div onClick={()=>clickChannel(channel.id)}  className=\"channel\" key={channel.id}>{name}</div>),\n\t})\n}\n\nfunction clickChannel(channelId){\n\tvar channelDivs=[];\n\tif (client.channels.get(channelId).type=='dm'){\n\t\tclient.channels.forEach((channel,key)=>{\n\t\t\tif (channel.type==='dm'){\n\t\t\t\tif (key===channelId){\n\t\t\t\t\tchannelDivs.push(<div onClick={()=>clickChannel(key)} className=\"selectedChannel\" key={key}>{channel.recipient.tag}</div>);\n\t\t\t\t}else{\n\t\t\t\t\tchannelDivs.push(<div onClick={()=>clickChannel(key)} className=\"channel\" key={key}>{channel.recipient.tag}</div>);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}else{\n\t\tclient.channels.get(channelId).guild.channels.forEach((channel, key)=>{\n\t\t\tif (channel.type!=='text'){\n\n\t\t\t}else if (key==channelId){\n\t\t\t\tchannelDivs.push(<div onClick={()=>clickChannel(key)} className=\"selectedChannel\" key={key}>{channel.name}</div>);\n\t\t\t}else{\n\t\t\t\tchannelDivs.push(<div onClick={()=>clickChannel(key)} className=\"channel\" key={key}>{channel.name}</div>);\n\t\t\t}\n\t\t})\n\t}\n\t//channelDivs=[\"hey\"];\n\tclient.channels.get(channelId).fetchMessages().then(msgs=>{\n\t\tglobalPage.setState({\n\t\t\tmessages:msgs.map(x=>{return createMessage(x)}).reverse(),\n\t\t\tchannels:channelDivs\n\t\t})\n\t});\n\n}\nfunction clickGuild(guild){\n\tglobalPage.setState({\n\t\tchannels:guild.channels.map(x=>{\n\t\t\tif (x.type==='text'){\n\t   \t\t\treturn <div onClick={()=>clickChannel(x.id)} className=\"channel\" id=\"x.id\">{x.name}</div>\n\t   \t\t}\n\t\t})\n\t});\n}\nfunction createMessage(msg){\n\tlet name;\n\tif (msg.member!=null){\n\t\tvar nameColor={\n\t\t\tcolor:'white',\n\t\t\tcolor:msg.member.displayHexColor,\n\t\t}\n\t\tname=msg.member.displayName;\n\t}else{\n\t\tname=msg.author.tag;\n\t}\n\t\n\tvar messageText=msg.cleanContent;\n\tlet match=messageText.match(/\\*{2}[^\\*]+\\*{2}/);\n\tvar newMessageText;\n\twhile(match!=null){\n\t\tnewMessageText=<span>{newMessageText}{messageText.slice(0,match.index)}<b>{match[0].slice(2,-2)}</b></span>;\n\t\tmessageText=messageText.slice(match.index+match[0].length);\n\t\tmatch=messageText.match(/\\*{2}[^\\*]+\\*{2}/);\n\t}\n\tnewMessageText=<span>{newMessageText}{messageText}</span>;\n\tmsg.attachments.forEach((val)=>{\n\t\tnewMessageText=<span><img src={val.url} alt=\"\" className=\"embededImage\"/>{newMessageText}</span>;\n\t})\n\n\treturn (<div className = \"message\" key={msg.id}>\n\t\t\t\t<img src={msg.author.avatarURL} alt=\"\" className=\"avatar\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"messageAuthor\">\n\t\t\t\t\t\t<input style={{float:'right'}}type=\"checkbox\" onClick={()=>{selectMessage(msg)}}></input>\n\t\t\t\t\t\t<span style={{float:'right'}} onClick={()=>{printMsg(msg)}}>{msg.author.tag}</span>\n\t\t\t\t\t\t<span style={nameColor}>{name}</span>\n\t\t\t\t\t\t<span className=\"dateTime\"> {msg.createdAt.toLocaleString()}</span> \n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"messageText\">{newMessageText}</div>\n\t\t\t\t</div>\n\t\t\t</div>)\n}\nlet selectedMessages= new Map();\nfunction selectMessage(msg){\n\tselectedMessages.set(msg.id,msg);\n}\nfunction clearMessages(){\n\tselectedMessages= new Map();\n}\nfunction printMessages(){\n\tselectedMessages.forEach(printMsg);\n}\nfunction printMsg(val){\n\tconsole.log(val);\n}\nfunction deleteMessages(){\n\tselectedMessages.forEach(deleteMsg);\n\tfunction deleteMsg(val, key){\n\t\tval.delete(); \n\t}\n\tclearMessages();\n\n}\nclass Page extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tguilds:\"guilds\",\n\t\t\tchannels:'channels',\n\t\t\tmessages:'messages',\n\t\t\tmembers:'members'\n\t\t}\n\t\tglobalPage=this;\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Guilds guilds={this.state.guilds}/>\n\t\t\t\t<Channels channels={this.state.channels}/>\n\t\t\t\t<Messages messages={this.state.messages}/>\n\t\t\t\t<Members members={this.state.members}/>\n\t\t\t</div>\n\t\t)\n\t}\n\tshowMessages(){\n\t\tconsole.log(this.state.messages);\n\t}\n}\n\nclass Guilds extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tguilds:this.props.guilds,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tguilds:props.guilds,\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"guilds\">\n\t\t\t\t{this.state.guilds}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Channels extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tchannels:this.props.channels,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tchannels:props.channels,\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"channels\">\n\t\t\t\t{this.state.channels}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Messages extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tmessages:this.props.messages,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tmessages:props.messages\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"messages\">\n\t\t\t\t<div id=\"messageButtons\">\n\t\t\t\t\t<button type=\"button\" className=\"button\" onClick={()=>deleteMessages()}>Delete</button><button type=\"button\" className=\"button\" onClick={()=>clearMessages()}>Clear Selection</button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.messages}\n\t\t\t</div>\n\t\t)\n\t}\n\tshowMessages(){\n\t\tconsole.log(this.state.messages);\n\t}\n}\n\nclass Members extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tmembers:this.props.members,\n\t\t}\n\t}\n\tcomponentWillReceiveProps(props){\n\t\tthis.setState({\n\t\t\tmembers:props.members\n\t\t})\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div id=\"members\">\n\t\t\t\t{this.state.members}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nReactDOM.render(\n\t<Page />,\n\tdocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}