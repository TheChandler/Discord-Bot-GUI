{"ast":null,"code":"/**\n * Represents an attachment in a message.\n * @param {BufferResolvable|Stream} file The file\n * @param {string} [name] The name of the file, if any\n */\nclass Attachment {\n  constructor(file, name) {\n    this.file = null;\n    if (name) this.setAttachment(file, name);else this._attach(file);\n  }\n  /**\n    * The name of the file\n    * @type {?string}\n    * @readonly\n    */\n\n\n  get name() {\n    return this.file.name;\n  }\n  /**\n    * The file\n    * @type {?BufferResolvable|Stream}\n    * @readonly\n    */\n\n\n  get attachment() {\n    return this.file.attachment;\n  }\n  /**\n    * Set the file of this attachment.\n    * @param {BufferResolvable|Stream} file The file\n    * @param {string} name The name of the file\n    * @returns {Attachment} This attachment\n    */\n\n\n  setAttachment(file, name) {\n    this.file = {\n      attachment: file,\n      name\n    };\n    return this;\n  }\n  /**\n    * Set the file of this attachment.\n    * @param {BufferResolvable|Stream} attachment The file\n    * @returns {Attachment} This attachment\n    */\n\n\n  setFile(attachment) {\n    this.file = {\n      attachment\n    };\n    return this;\n  }\n  /**\n    * Set the name of this attachment.\n    * @param {string} name The name of the image\n    * @returns {Attachment} This attachment\n    */\n\n\n  setName(name) {\n    this.file.name = name;\n    return this;\n  }\n  /**\n    * Set the file of this attachment.\n    * @param {BufferResolvable|Stream} file The file\n    * @param {string} name The name of the file\n    * @returns {void}\n    * @private\n    */\n\n\n  _attach(file, name) {\n    if (typeof file === 'string') this.file = file;else this.setAttachment(file, name);\n  }\n\n}\n\nmodule.exports = Attachment;","map":null,"metadata":{},"sourceType":"script"}