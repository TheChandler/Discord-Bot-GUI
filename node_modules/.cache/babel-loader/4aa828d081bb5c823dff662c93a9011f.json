{"ast":null,"code":"const snekfetch = require('snekfetch');\n\nconst Constants = require('../../util/Constants');\n\nclass APIRequest {\n  constructor(rest, method, path, auth, data, files, reason) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.path = path.toString();\n    this.auth = auth;\n    this.data = data;\n    this.files = files;\n    this.route = this.getRoute(this.path);\n    this.reason = reason;\n  }\n\n  getRoute(url) {\n    let route = url.split('?')[0];\n\n    if (route.includes('/channels/') || route.includes('/guilds/')) {\n      const startInd = route.includes('/channels/') ? route.indexOf('/channels/') : route.indexOf('/guilds/');\n      const majorID = route.substring(startInd).split('/')[2];\n      route = route.replace(/(\\d{8,})/g, ':id').replace(':id', majorID);\n    }\n\n    return route;\n  }\n\n  getAuth() {\n    if (this.client.token && this.client.user && this.client.user.bot) {\n      return \"Bot \".concat(this.client.token);\n    } else if (this.client.token) {\n      return this.client.token;\n    }\n\n    throw new Error(Constants.Errors.NO_TOKEN);\n  }\n\n  gen() {\n    const API = \"\".concat(this.client.options.http.host, \"/api/v\").concat(this.client.options.http.version);\n    const request = snekfetch[this.method](\"\".concat(API).concat(this.path));\n    if (this.auth) request.set('Authorization', this.getAuth());\n    if (this.reason) request.set('X-Audit-Log-Reason', encodeURIComponent(this.reason));\n    if (!this.rest.client.browser) request.set('User-Agent', this.rest.userAgentManager.userAgent);\n\n    if (this.files) {\n      for (const file of this.files) if (file && file.file) request.attach(file.name, file.file, file.name);\n\n      if (typeof this.data !== 'undefined') request.attach('payload_json', JSON.stringify(this.data));\n    } else if (this.data) {\n      request.send(this.data);\n    }\n\n    return request;\n  }\n\n}\n\nmodule.exports = APIRequest;","map":null,"metadata":{},"sourceType":"script"}