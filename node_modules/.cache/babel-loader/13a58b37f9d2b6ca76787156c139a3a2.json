{"ast":null,"code":"/**\n * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\n * will use this class opposed to the Emoji class when the client doesn't know enough\n * information about them.\n */\nclass ReactionEmoji {\n  constructor(reaction, name, id) {\n    /**\n     * The message reaction this emoji refers to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n    /**\n     * The name of this reaction emoji\n     * @type {string}\n     */\n\n    this.name = name;\n    /**\n     * The ID of this reaction emoji\n     * @type {?Snowflake}\n     */\n\n    this.id = id;\n  }\n  /**\n   * The identifier of this emoji, used for message reactions\n   * @type {string}\n   * @readonly\n   */\n\n\n  get identifier() {\n    if (this.id) return \"\".concat(this.name, \":\").concat(this.id);\n    return encodeURIComponent(this.name);\n  }\n  /**\n   * Creates the text required to form a graphical emoji on Discord.\n   * @example\n   * // Send the emoji used in a reaction to the channel the reaction is part of\n   * reaction.message.channel.send(`The emoji used is ${reaction.emoji}`);\n   * @returns {string}\n   */\n\n\n  toString() {\n    return this.id ? \"<:\".concat(this.name, \":\").concat(this.id, \">\") : this.name;\n  }\n\n}\n\nmodule.exports = ReactionEmoji;","map":null,"metadata":{},"sourceType":"script"}