{"ast":null,"code":"const Channel = require('./Channel');\n\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\n\nconst Collection = require('../util/Collection');\n/**\n * Represents a direct message channel between two users.\n * @extends {Channel}\n * @implements {TextBasedChannel}\n */\n\n\nclass DMChannel extends Channel {\n  constructor(client, data) {\n    super(client, data);\n    this.type = 'dm';\n    this.messages = new Collection();\n    this._typing = new Map();\n  }\n\n  setup(data) {\n    super.setup(data);\n    /**\n     * The recipient on the other end of the DM\n     * @type {User}\n     */\n\n    this.recipient = this.client.dataManager.newUser(data.recipients[0]);\n    /**\n     * The ID of the last message in the channel, if one was sent\n     * @type {?Snowflake}\n     */\n\n    this.lastMessageID = data.last_message_id;\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n\n    this.lastPinTimestamp = data.last_pin_timestamp ? new Date(data.last_pin_timestamp).getTime() : null;\n  }\n  /**\n   * When concatenated with a string, this automatically concatenates the recipient's mention instead of the\n   * DM channel object.\n   * @returns {string}\n   */\n\n\n  toString() {\n    return this.recipient.toString();\n  } // These are here only for documentation purposes - they are implemented by TextBasedChannel\n\n  /* eslint-disable no-empty-function */\n\n\n  get lastPinAt() {}\n\n  send() {}\n\n  sendMessage() {}\n\n  sendEmbed() {}\n\n  sendFile() {}\n\n  sendFiles() {}\n\n  sendCode() {}\n\n  fetchMessage() {}\n\n  fetchMessages() {}\n\n  fetchPinnedMessages() {}\n\n  search() {}\n\n  startTyping() {}\n\n  stopTyping() {}\n\n  get typing() {}\n\n  get typingCount() {}\n\n  createCollector() {}\n\n  createMessageCollector() {}\n\n  awaitMessages() {} // Doesn't work on DM channels; bulkDelete() {}\n\n\n  acknowledge() {}\n\n  _cacheMessage() {}\n\n}\n\nTextBasedChannel.applyToClass(DMChannel, true, ['bulkDelete']);\nmodule.exports = DMChannel;","map":null,"metadata":{},"sourceType":"script"}